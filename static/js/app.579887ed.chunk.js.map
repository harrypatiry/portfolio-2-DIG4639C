{"version":3,"sources":["screens/Home.js","screens/HistoryTrivia.js","screens/GeoTrivia.js","screens/ProgTrivia.js","App.js"],"names":["Home","navigation","View","style","styles","container","Text","Pressable","onPress","navigate","button","text","HistoryTrivia","useState","score","setScore","question","setQuestion","showResults","setShowResults","questions","title","multipleAnswers","answers","id","correct","length","map","onClick","GeoTrivia","ProgTrivia","Stack","createNativeStackNavigator","App","NavigationContainer","Navigator","Screen","name","component","StyleSheet","create","padding","height","flex","alignItems","paddingVertical","paddingHorizontal","borderRadius","elevation","borderWidth","borderColor","color","backgroundColor","fontSize","lineHeight","fontWeight","letterSpacing","header","justifyContent","marginVertical","footer","marginBottom"],"mappings":"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","file":"static/js/app.579887ed.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Pressable } from 'react-native';\r\nimport { styles } from '../App';\r\n\r\nexport default function Home({ navigation }) {\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<Text>Home</Text>\r\n            <Pressable onPress={() => navigation.navigate(\"HistoryTrivia\")} style={styles.button}>\r\n                <Text style={styles.text}>History</Text>\r\n            </Pressable>\r\n\t\t\t<Pressable onPress={() => navigation.navigate(\"GeoTrivia\")} style={styles.button}>\r\n                <Text style={styles.text}>Geography</Text>\r\n            </Pressable>\r\n\t\t\t<Pressable onPress={() => navigation.navigate(\"ProgTrivia\")} style={styles.button}>\r\n                <Text style={styles.text}>Programming</Text>\r\n            </Pressable>\r\n\t\t</View>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Text, Pressable } from 'react-native';\r\nimport { styles } from '../App';\r\n\r\n\r\nexport default function HistoryTrivia({ navigation }) {\r\n  let [score, setScore] = useState(0);\r\n  let [question, setQuestion] = useState(0);\r\n  let [showResults, setShowResults] = useState(false);\r\n  let questions = [\r\n    {\r\n          title: \"How many years did the 100 years war last?\",\r\n          multipleAnswers: true,\r\n          answers: [\r\n            { id: 0, correct: false, title: \"94 years\" },\r\n            { id: 1, correct: false, title: \"102 years\" },\r\n            { id: 2, correct: false, title: \"143 years\" },\r\n            { id: 3, correct: true, title: \"116 years\" },\r\n          ],\r\n        },\r\n        {\r\n          title: \"In 1927, who became the first person to fly solo and non-stop across the Atlantic?\",\r\n          multipleAnswers: true,\r\n          answers: [\r\n            { id: 0, correct: false, title: \"The Red Baron\" },\r\n            { id: 1, correct: true, title: \"Charles Lindbergh\" },\r\n            { id: 2, correct: false, title: \"Amelia Earhart\" },\r\n            { id: 3, correct: false, title: \"Tom Cruise\" },\r\n          ],\r\n        },\r\n        {\r\n            title: \"Who was the first person to walk on the moon?\",\r\n            multipleAnswers: true,\r\n            answers: [\r\n              { id: 0, correct: false, title: \"Buzz Aldrin\" },\r\n              { id: 1, correct: false, title: \"John Glenn\" },\r\n              { id: 2, correct: true, title: \"Neil Armstrong\" },\r\n              { id: 3, correct: false, title: \"Betty Davis\" },\r\n            ],\r\n          },\r\n      ];\r\n\r\n    let answer = (correct) => {\r\n        if (correct) {\r\n          setScore(score + 1);\r\n        }\r\n    \r\n        if (question + 1 < questions.length) {\r\n          setQuestion(question + 1);\r\n        } else {\r\n          setShowResults(true);\r\n        }\r\n      };\r\n      return (\r\n        <div>\r\n          {showResults ? (\r\n            <div>\r\n              <h2>score: {score}</h2>\r\n              <Pressable score={score} onPress={() => navigation.navigate(\"Home\")} style={styles.button}>\r\n                <Text style={styles.text}>Home</Text>\r\n              </Pressable>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2>\r\n                Question: {question + 1} out of {questions.length}\r\n              </h2>\r\n              <h3>{questions[question].title}</h3>\r\n              <ul>\r\n                {questions[question].answers.map((answers) => {\r\n                  return (\r\n                    <button\r\n                      styles={styles.button}\r\n                      key={answers.id}\r\n                      onClick={() => answer(answers.correct)}\r\n                    >\r\n                      {answers.title}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Text, Pressable } from 'react-native';\r\nimport { styles } from '../App';\r\n\r\n\r\nexport default function GeoTrivia({ navigation }) {\r\n  let [score, setScore] = useState(0);\r\n  let [question, setQuestion] = useState(0);\r\n  let [showResults, setShowResults] = useState(false);\r\n  let questions = [\r\n    {\r\n          title: \"What is the largest country in the world?\",\r\n          multipleAnswers: true,\r\n          answers: [\r\n            { id: 0, correct: true, title: \"Russia\" },\r\n            { id: 1, correct: false, title: \"United States\" },\r\n            { id: 2, correct: false, title: \"China\" },\r\n            { id: 3, correct: false, title: \"Australia\" },\r\n          ],\r\n        },\r\n        {\r\n          title: \"Where are the Spanish Steps located?\",\r\n          multipleAnswers: true,\r\n          answers: [\r\n            { id: 0, correct: false, title: \"Spain\" },\r\n            { id: 1, correct: true, title: \"Italy\" },\r\n            { id: 2, correct: false, title: \"France\" },\r\n            { id: 3, correct: false, title: \"England\" },\r\n          ],\r\n        },\r\n        {\r\n            title: \"Where was the first organized marathon held?\",\r\n            multipleAnswers: true,\r\n            answers: [\r\n              { id: 0, correct: false, title: \"Italy\" },\r\n              { id: 1, correct: false, title: \"Spain\" },\r\n              { id: 2, correct: true, title: \"Greece\" },\r\n              { id: 3, correct: false, title: \"China\" },\r\n            ],\r\n          },\r\n      ];\r\n\r\n    let answer = (correct) => {\r\n        if (correct) {\r\n          setScore(score + 1);\r\n        }\r\n    \r\n        if (question + 1 < questions.length) {\r\n          setQuestion(question + 1);\r\n        } else {\r\n          setShowResults(true);\r\n        }\r\n      };\r\n      return (\r\n        <div>\r\n          {showResults ? (\r\n            <div>\r\n              <h2>score: {score}</h2>\r\n              <Pressable score={score} onPress={() => navigation.navigate(\"Home\")} style={styles.button}>\r\n                <Text style={styles.text}>Home</Text>\r\n              </Pressable>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2>\r\n                Question: {question + 1} out of {questions.length}\r\n              </h2>\r\n              <h3>{questions[question].title}</h3>\r\n              <ul>\r\n                {questions[question].answers.map((answers) => {\r\n                  return (\r\n                    <button\r\n                      styles={styles.button}\r\n                      key={answers.id}\r\n                      onClick={() => answer(answers.correct)}\r\n                    >\r\n                      {answers.title}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Text, Pressable } from 'react-native';\r\nimport { styles } from '../App';\r\n\r\n\r\nexport default function ProgTrivia({ navigation }) {\r\n  let [score, setScore] = useState(0);\r\n  let [question, setQuestion] = useState(0);\r\n  let [showResults, setShowResults] = useState(false);\r\n  let questions = [\r\n    {\r\n          title: \"What is the two digit numeric system, that only uses 0 and 1, that computers operate using?\",\r\n          multipleAnswers: true,\r\n          answers: [\r\n            { id: 0, correct: false, title: \"Morse\" },\r\n            { id: 1, correct: false, title: \"BASIC\" },\r\n            { id: 2, correct: false, title: \"C#\" },\r\n            { id: 3, correct: true, title: \"Binary\" },\r\n          ],\r\n        },\r\n        {\r\n          title: \"What does HTTP stand for?\",\r\n          multipleAnswers: true,\r\n          answers: [\r\n            { id: 0, correct: true, title: \"HyperText Transfer Protocol\" },\r\n            { id: 1, correct: false, title: \"Houses Try The Pie\" },\r\n            { id: 2, correct: false, title: \"HyperText Transition Process\" },\r\n            { id: 3, correct: false, title: \"Hornets Take The Property\" },\r\n          ],\r\n        },\r\n        {\r\n            title: \"Who created the game Minecraft\",\r\n            multipleAnswers: true,\r\n            answers: [\r\n              { id: 0, correct: false, title: \"Jordan Peterson\" },\r\n              { id: 1, correct: true, title: \"Markus Persson\" },\r\n              { id: 2, correct: false, title: \"Brad Pitt\" },\r\n              { id: 3, correct: false, title: \"Dolly Parton\" },\r\n            ],\r\n          },\r\n      ];\r\n\r\n    let answer = (correct) => {\r\n        if (correct) {\r\n          setScore(score + 1);\r\n        }\r\n    \r\n        if (question + 1 < questions.length) {\r\n          setQuestion(question + 1);\r\n        } else {\r\n          setShowResults(true);\r\n        }\r\n      };\r\n      return (\r\n        <div>\r\n          {showResults ? (\r\n            <div>\r\n              <h2>score: {score}</h2>\r\n              <Pressable score={score} onPress={() => navigation.navigate(\"Home\")} style={styles.button}>\r\n                <Text style={styles.text}>Home</Text>\r\n              </Pressable>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2>\r\n                Question: {question + 1} out of {questions.length}\r\n              </h2>\r\n              <h3>{questions[question].title}</h3>\r\n              <ul>\r\n                {questions[question].answers.map((answers) => {\r\n                  return (\r\n                    <button\r\n                      styles={styles.button}\r\n                      key={answers.id}\r\n                      onClick={() => answer(answers.correct)}\r\n                    >\r\n                      {answers.title}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n}\r\n","import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React, { useState } from 'react';\nimport { StyleSheet, View, Text } from 'react-native';\nimport Home from './screens/Home';\nimport HistoryTrivia from './screens/HistoryTrivia';\nimport GeoTrivia from './screens/GeoTrivia';\nimport ProgTrivia from './screens/ProgTrivia';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n\treturn (\n\t\t<NavigationContainer style={styles.container}>\n\t\t\t<Stack.Navigator>\n\t\t\t\t<Stack.Screen name=\"Home\" component={Home} />\n\t\t\t\t<Stack.Screen name=\"HistoryTrivia\" component={HistoryTrivia} />\n\t\t\t\t<Stack.Screen name=\"GeoTrivia\" component={GeoTrivia} />\n\t\t\t\t<Stack.Screen name=\"ProgTrivia\" component={ProgTrivia} />\n\t\t\t</Stack.Navigator>\n\t\t</NavigationContainer>\n\t);\n}\n\nexport const styles = StyleSheet.create({\n\tcontainer: {\n\t\tpadding: 16,\n\t\theight: \"100%\",\n\t\tflex: 1,\n\t},\n\tbutton: {\n\t\talignItems: 'center',\n\t\tpaddingVertical: 12,\n\t\tpaddingHorizontal: 32,\n\t\tborderRadius: 4,\n\t\televation: 3,\n\t\tborderWidth: 2,\n\t\tborderColor: \"white\",\n\t\tcolor: \"white\",\n\t\tbackgroundColor: 'black',\n\t  },\n\t  text: {\n\t\tfontSize: 16,\n\t\tlineHeight: 20,\n\t\tfontWeight: 'bold',\n\t\tletterSpacing: 0.25,\n\t\tcolor: 'white',\n\t  },\n\t  header: {\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tmarginVertical: 12,\n\t  },\n\t  footer: {\n\t\talignItems: 'center',\n\t\tpaddingVertical: 12,\n\t\tmarginBottom: 16,\n\t\tjustifyContent: 'bottom',\n\t  },\n\n})"],"sourceRoot":""}